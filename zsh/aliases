#!/usr/bin/env zsh

# -------------------------------- File Editing ---------------------------------------

# Open all files in current directory excluding...
command -v fd &>/dev/null && alias va='$EDITOR $(fd -HItf \
  --exclude .git \
  --exclude .github \
  --exclude __pycache__ \
  --exclude Session.vim \
  --exclude .venv \
  --exclude "Icon?")'

# Open vim using viminfo state file
alias vi='vim -i "$XDG_STATE_HOME/vim/viminfo"'

# Deletes temp file - NOTE this fixes neovim shada error, but unsure why this works...
command -v nvim &>/dev/null && alias reload-shada='mv -f "$XDG_STATE_HOME/nvim/shada/main.shada.tmp.x" "$XDG_STATE_HOME/nvim/shada/main.shada"'

# -------------------------------- File Management & Previewing ---------------------------------------

# Move up 2 directories
alias ...="cd ../.."

# uses value of $GREP_COLOR
alias grep='grep --color=auto'

# List all directory items in long format with git info
command -v eza &>/dev/null && alias l='eza --all --long --git --icons=always --group-directories-first'

# Print all directory items in colored tree format excluding git info
command -v tree &>/dev/null && alias tree='tree -aCI ".git|.github"'

# Fuzzy search man pages
command -v fzf &>/dev/null && alias docs='compgen -c | fzf | xargs man'

# -------------------------------- List Long Functions ---------------------------------------

# Outputs System info
alias list-path='tr ":" "\n" <<< "$PATH"'
alias list-shells='tail -n +5 /etc/shells'
alias list-sysinfo='system_profiler SPSoftwareDataType SPHardwareDataType'
alias list-users='dscl . list /Users | grep -v "^_"'
alias list-real-users='dscl . list /Users UniqueID | awk '\''$2 >= 501 { print $1 }'\'''

# Outputs Homebrew package info
command -v brew &>/dev/null && {
  alias list-apps='brew list --cask | xargs -n1'
  alias list-cmds='brew list --formula | xargs -n1'
  alias list-deps='brew deps --tree --installed'
}

# Outputs Aliases & Environment Variables
alias list-alias='alias | sort'
alias list-vars='env | sort'

# Outputs Zsh options + functions + FPATH + syntax-highlighting
[[ -n $ZSH_VERSION ]] && {
  alias list-opts='setopt'
  alias list-funcs='print -l ${(ok)functions[(I)[^_]*]} | sort'
  alias list-fpath='print -l ${fpath[@]}'
  alias list-highlighter='print -raC2 - "${(@kvq+)ZSH_HIGHLIGHT_STYLES}" | sort'
}

# Outputs Bash options + functions
[[ -n $BASH_VERSION ]] && {
  alias list-opts='shopt -p'
  alias list-funcs='declare -F | cut -d " " -f3 | grep -v "/"'
}

# -------------------------------- Workspace Management ---------------------------------------

# Tmux
command -v tmux &>/dev/null && alias reload-tmux='tmux kill-server &>/dev/null; work'

# -------------------------------- Version Control ---------------------------------------

# Commitizen
command -v cz &>/dev/null && alias czc='cz commit'

# Git
command -v git &>/dev/null && {
  alias gaa='git add --all'
  alias gd='git diff'
  alias gds='git diff --staged'
  alias gp='git push'
  alias grs='git restore'
  alias grst='git restore --staged'
  alias grv='git remote --verbose'
  alias gst='git status'

  alias glg='git log \
    --graph \
    --date=format:"%b-%d-%Y" \
    --pretty="%C(yellow)%h %C(blue)%an %C(brightmagenta)%ad%C(auto)%d %C(white)%s %Creset"'

  command -v fzf &>/dev/null && {
    alias gsw='git branch --format="%(refname:short)" \
      | fzf \
        --header "git switch" \
        --border-label "  branches " \
        --preview "git show --color=always {1}" \
      | xargs -r git switch'
  }
}

# -------------------------------- CLI tools ---------------------------------------

# https://developer.1password.com/docs/cli/shell-plugins
command -v op &>/dev/null && {
  command -v gh &>/dev/null && alias gh="op plugin run -- gh"
  # command -v mysql &>/dev/null && alias mysql="op plugin run -- mysql"

  op_mysql_pwd() {
    local user="$1"
    local vault="${2:-Private}"

    op item get "MySQL User: $user" --vault "$vault" --field 'password' --reveal
  }

  # MySQL launcher
  command -v mycli &>/dev/null && {
    alias mycli-dev='mycli --myclirc "$XDG_CONFIG_HOME/mycli/config" -u mubuntu -p"$(op_mysql_pwd mubuntu)"'
    alias mycli-root='mycli --myclirc "$XDG_CONFIG_HOME/mycli/config" -u root -p"$(op_mysql_pwd root)"'
  }

  command -v mysql &>/dev/null && {
    alias mysql-dev='mysql -u mubuntu -p"$(get_mysql_pwd mubuntu)"'
    alias mysql-root='mysql -u root -p"$(get_mysql_pwd root)"'
  }
}

# Print weather data
alias weather='curl wttr.in'

# Sound toggler
command -v SwitchAudioSource &>/dev/null && {
  alias sas-airpods='SwitchAudioSource -s "band4band"'
  alias sas-speaker='SwitchAudioSource -s "CalDigit TS4 Audio - Rear"'
  alias sas-macbook='SwitchAudioSource -s "MacBook Pro Speakers"'
}

# Remove macOS quarantine flag(s)
[[ -d /Applications/Spotify.app ]] && alias fix-spotify='sudo xattr -rd com.apple.quarantine /Applications/Spotify.app'

# -------------------------------- Suffix Aliases ---------------------------------------

command -v autoload &>/dev/null && autoload -Uz is-at-least && is-at-least 4.2.0 && {
  # Images
  _image_fts=(jpg jpeg png gif mng tiff tif xpm)
  for ft in $_image_fts; do alias -s $ft='open -a Preview'; done

  # Videos
  _media_fts=(ape avi flv m4a mkv mov mp3 mpeg mpg ogg ogm rm wav webm)
  for ft in $_media_fts; do alias -s $ft='open -a VLC'; done

  # Docs
  alias -s pdf='open -a Skim'

  # Compressed
  alias -s zip='unzip -l'
  alias -s tar='tar tf'
  alias -s tar.gz='echo '
}
